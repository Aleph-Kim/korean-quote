name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image  # Step 6: 어플리케이션용 Docker 이미지 빌드
      run: |
        docker build . -t ${{ secrets.DOCKER_USERNAME }}/korean-quote:${{ github.sha }}  # GitHub SHA로 태그한 Docker 이미지 빌드
        docker tag ${{ secrets.DOCKER_USERNAME }}/korean-quote:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/korean-quote:latest  # Docker 이미지를 'latest'로 태그

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/korean-quote:${{ github.sha }}
          sudo docker stop korean-quote || true
          sudo docker rm korean-quote || true  # Docker 컨테이너 삭제 (오류 무시)
          sudo docker run -d -p 3000:3000 --name korean-quote ${{ secrets.DOCKER_USERNAME }}/korean-quote:${{ github.sha }}
